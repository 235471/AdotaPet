openapi: 3.0.3
info:
  title: API de Adoção de Pets
  description: API para gerenciamento de abrigos, adotantes e pets
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor local de desenvolvimento

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
        details:
          type: object
          nullable: true

    LoginRequest:
      type: object
      required:
        - email
        - senha
      properties:
        email:
          type: string
          format: email
        senha:
          type: string
          format: password

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string

    CreateUsuarioDto:
      type: object
      required:
        - nome
        - email
        - senha
      properties:
        nome:
          type: string
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
          description: Mínimo 8 caracteres, 1 maiúscula, 1 número e 1 caractere especial
        celular:
          type: string
          nullable: true

    UpdateUsuarioDto:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
          description: Mínimo 8 caracteres, 1 maiúscula, 1 número e 1 caractere especial
        celular:
          type: string

    EnderecoDto:
      type: object
      required:
        - cidade
        - estado
      properties:
        cidade:
          type: string
        estado:
          type: string

    UsuarioResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            nome:
              type: string
            celular:
              type: string
              nullable: true

    EnderecoResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            usuario:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
                celular:
                  type: string
                  nullable: true
            endereco:
              type: object
              properties:
                cidade:
                  type: string
                estado:
                  type: string

    AdotanteResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              usuario:
                type: object
                properties:
                  nome:
                    type: string
                  email:
                    type: string
                  celular:
                    type: string
                    nullable: true
              endereco:
                type: object
                nullable: true
                properties:
                  cidade:
                    type: string
                  estado:
                    type: string
              pets:
                type: array
                items:
                  $ref: '#/components/schemas/PetBasic'

    AdocaoPetsDto:
      type: object
      required:
        - petIds
      properties:
        petIds:
          type: array
          items:
            type: integer
            format: int32

    PetBasic:
      type: object
      properties:
        nome:
          type: string
        especie:
          type: string
          enum: [CACHORRO, GATO, AVE, OUTRO]
        adotado:
          type: boolean
        dataNascimento:
          type: string
          format: date
        porte:
          type: string
          enum: [PEQUENO, MEDIO, GRANDE]

    PetFull:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nome:
          type: string
        especie:
          type: string
          enum: [CACHORRO, GATO, AVE, OUTRO]
        adotado:
          type: boolean
        dataNascimento:
          type: string
          format: date
        porte:
          type: string
          enum: [PEQUENO, MEDIO, GRANDE]

    PetResponse:
      type: object
      properties:
        data:
          oneOf:
            - type: object
              $ref: '#/components/schemas/PetFull'
            - type: array
              items:
                $ref: '#/components/schemas/PetFull'

    PetsAdotadosResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              pets:
                type: array
                items:
                  $ref: '#/components/schemas/PetFull'
              errors:
                type: array
                items:
                  type: string
                nullable: true

    CreatePetDto:
      type: object
      required:
        - nome
        - especie
        - porte
        - dataNascimento
      properties:
        nome:
          type: string
        especie:
          type: string
          enum: [CACHORRO, GATO, AVE, OUTRO]
        porte:
          type: string
          enum: [PEQUENO, MEDIO, GRANDE]
        dataNascimento:
          type: string
          format: date
        adotado:
          type: boolean
          default: false

    UpdatePetDto:
      type: object
      properties:
        nome:
          type: string
        especie:
          type: string
          enum: [CACHORRO, GATO, AVE, OUTRO]
        porte:
          type: string
          enum: [PEQUENO, MEDIO, GRANDE]
        dataNascimento:
          type: string
          format: date
        adotado:
          type: boolean

  responses:
    UnauthorizedError:
      description: Acesso não autorizado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundError:
      description: Recurso não encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    BadRequestError:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ConflictError:
      description: Conflito de recursos
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

security:
  - bearerAuth: []

paths:
  /usuarios/login:
    post:
      tags:
        - Autenticação
      summary: Realiza login no sistema
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /usuarios/adotante:
    post:
      tags:
        - Usuários
      summary: Cria um novo usuário do tipo adotante
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUsuarioDto'
      responses:
        '201':
          description: Usuário adotante criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '409':
          $ref: '#/components/responses/ConflictError'

  /usuarios/abrigo:
    post:
      tags:
        - Usuários
      summary: Cria um novo usuário do tipo abrigo
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUsuarioDto'
      responses:
        '201':
          description: Usuário abrigo criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '409':
          $ref: '#/components/responses/ConflictError'

  /usuarios/{id}:
    put:
      tags:
        - Usuários
      summary: Atualiza um usuário existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsuarioDto'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      tags:
        - Usuários
      summary: Remove um usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Usuário removido com sucesso
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /adotantes:
    get:
      tags:
        - Adotantes
      summary: Lista todos os adotantes
      responses:
        '200':
          description: Lista de adotantes retornada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdotanteResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /adotantes/{id}:
    patch:
      tags:
        - Adotantes
      summary: Atualiza o endereço de um adotante
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnderecoDto'
      responses:
        '200':
          description: Endereço do adotante atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnderecoResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /adotantes/{adotanteId}/pets:
    put:
      tags:
        - Adotantes
      summary: Adota um ou mais pets
      parameters:
        - name: adotanteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdocaoPetsDto'
      responses:
        '200':
          description: Pets adotados com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetsAdotadosResponse'
        '207':
          description: Operação parcialmente bem-sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetsAdotadosResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /abrigos:
    get:
      tags:
        - Abrigos
      summary: Lista todos os abrigos
      responses:
        '200':
          description: Lista de abrigos retornada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdotanteResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /abrigos/{id}:
    patch:
      tags:
        - Abrigos
      summary: Atualiza o endereço de um abrigo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnderecoDto'
      responses:
        '200':
          description: Endereço do abrigo atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnderecoResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /abrigos/{id}/pets:
    post:
      tags:
        - Abrigos
      summary: Cadastra um ou mais pets para um abrigo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreatePetDto'
      responses:
        '201':
          description: Pets cadastrados com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PetResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /pets:
    get:
      tags:
        - Pets
      summary: Lista todos os pets disponíveis para adoção
      security: []
      responses:
        '200':
          description: Lista de pets retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PetResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /pets/search:
    get:
      tags:
        - Pets
      summary: Busca pets por critérios
      security: []
      parameters:
        - name: adotado
          in: query
          required: false
          schema:
            type: boolean
        - name: nome
          in: query
          required: false
          schema:
            type: string
        - name: especie
          in: query
          required: false
          schema:
            type: string
            enum: [cachorro, gato, passaro, tartaruga]
        - name: porte
          in: query
          required: false
          schema:
            type: string
            enum: [pequeno, medio, grande]
      responses:
        '200':
          description: Lista de pets filtrada retornada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /pets/{id}:
    put:
      tags:
        - Pets
      summary: Atualiza um pet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePetDto'
      responses:
        '204':
          description: Pet atualizado com sucesso
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      tags:
        - Pets
      summary: Remove um pet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Pet removido com sucesso
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
